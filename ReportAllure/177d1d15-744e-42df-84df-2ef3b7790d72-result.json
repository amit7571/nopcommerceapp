{"name": "test_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: Service /usr/local/bin/chromedriver unexpectedly exited. Status code was: -9", "trace": "browser = 'chrome'\n\n    @pytest.fixture()\n    def setup(browser):\n        if browser == 'chrome':\n>           driver = webdriver.Chrome()\n\ntestCases/conftest.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv/lib/python3.8/site-packages/selenium/webdriver/chrome/webdriver.py:49: in __init__\n    super().__init__(\nvenv/lib/python3.8/site-packages/selenium/webdriver/chromium/webdriver.py:51: in __init__\n    self.service.start()\nvenv/lib/python3.8/site-packages/selenium/webdriver/common/service.py:97: in start\n    self.assert_process_still_running()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.chrome.service.Service object at 0x7ff49ce25f10>\n\n    def assert_process_still_running(self) -> None:\n        \"\"\"Check if the underlying process is still running.\"\"\"\n        return_code = self.process.poll()\n        if return_code:\n>           raise WebDriverException(f\"Service {self._path} unexpectedly exited. Status code was: {return_code}\")\nE           selenium.common.exceptions.WebDriverException: Message: Service /usr/local/bin/chromedriver unexpectedly exited. Status code was: -9\n\nvenv/lib/python3.8/site-packages/selenium/webdriver/common/service.py:110: WebDriverException"}, "start": 1692365901205, "stop": 1692365901205, "uuid": "7b407a6a-2ce5-4d11-896f-a4bd85e9a64c", "historyId": "6077c220bd96aaae36062a3875e7b04f", "testCaseId": "6077c220bd96aaae36062a3875e7b04f", "fullName": "test_login.Test_001_Login#test_login", "labels": [{"name": "tag", "value": "regression"}, {"name": "tag", "value": "sanity"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "Test_001_Login"}, {"name": "host", "value": "bijaks-MBP.bbrouter"}, {"name": "thread", "value": "46500-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_login"}]}